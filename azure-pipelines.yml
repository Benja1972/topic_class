# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
<<<<<<< HEAD
    Python36:
      python.version: '3.6'
=======
>>>>>>> 042c4bf8a4f3ff501af298545f26818e1ee3f27b
    Python37:
      python.version: '3.7'

steps:
- task: TwineAuthenticate@1
<<<<<<< HEAD
<<<<<<< HEAD
=======
  inputs:
    artifactFeed: alpha10x
>>>>>>> 1b266c89259cbd5cd7d445d7357ad8cd232fd711
=======
  inputs:
    artifactFeed: alpha10x
>>>>>>> 042c4bf8a4f3ff501af298545f26818e1ee3f27b
  displayName: 'Twine Authenticate '

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install twine --user
  displayName: 'Install Twine'

- script: |
    python -m pip install twine --user
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    python setup.py sdist
    python -m twine upload -r alpha10x --config-file $(PYPIRC_PATH) dist/*
  displayName: 'Publish package' 

